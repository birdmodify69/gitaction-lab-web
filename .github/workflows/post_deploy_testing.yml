name: Post Deployment Testing
on:
  workflow_run:
    workflows: [deploy-to-testing]
    types:
      - completed
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: bird-webapp-demo-testing    # set this to your application's name  
  CONTAINER_REPO: 'birdmodify/birdtest-webapp'

jobs:   
  robot-testing:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      #needs: [build-container]
      environment: testing
      #url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

      steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        
      #- run: echo testing URL ${{ secrets.WEBAPP_URL }}       
      - run: ls -l ${{ github.workspace }}/robot_tests
      - run: mkdir reports
      - run: ls -l
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
           # Set always-auth in npmrc
           #always-auth: # optional, default is false
           # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
           node-version: 12.x
         
      
      - name: Setup Python
        uses: actions/setup-python@v2.3.1
        with:
          python-version: 3.7 # optional, default is 3.x         
      - run: pip install robotframework robotframework-seleniumlibrary && npm install chromedriver
      
      - name: Automate Testing by Robot
        run: robot --variable URL:${{ secrets.WEBAPP_URL }}  -d ./reports -x outputxunit.xml ./robot_tests/Test.robot      
      - run: ls -l
      - run: ls -l ./reports
                  
      - name: Upload test results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: reports
          path: ${{ github.workspace }}/reports      
            
      #- name: Download reports
      #  uses: actions/download-artifact@v1
      #  with:
      #      name: reports
            
      - name: Robot Reporter
        # You may pin to the exact commit or the version.
        # uses: joonvena/robotframework-reporter-action@d98aa3cf6d09f7c4dc28ea16ea49d6e07c09dbbe
        uses: joonvena/robotframework-reporter-action@v1.1
        with:
          # Token to access the API
          gh_access_token: ${{ secrets.GITHUB_TOKEN }}
          # Path to report
          report_path: reports

  DAST-Test:
      name: StackHawk
      runs-on: ubuntu-20.04
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
        
        #- name: Start your service
          #run: ./your-service.sh &                  # ✏️ Update this to run your own service to be scanned
        #  run: docker run -p 3000:80 -d docker.io/birdmodify/birdtest-webapp:latest

        - name: Run HawkScan
          uses: stackhawk/hawkscan-action@4c3258cd62248dac6d9fe91dd8d45928c697dee0
          continue-on-error: true                   # ✏️ Set to false to break your build on scan errors
          with:
            apiKey: ${{ secrets.HAWK_API_KEY }}
            codeScanningAlerts: true
            githubToken: ${{ github.token }}

# This workflow will build and push a node.js application to an Azure Web App when there is a push to the master branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. For Linux apps, add an app setting called WEBSITE_WEBDEPLOY_USE_SCM and set it to true in your app **before downloading the file**.
#      For more instructions see: https://docs.microsoft.com/azure/app-service/configure-common#configure-app-settings
#
# 2. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples\
name: Post Deployment Testing
on:
  workflow_run:
    workflows: [deploy-to-testing]
    types:
      - completed
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: bird-webapp-demo-testing    # set this to your application's name  
  CONTAINER_REPO: 'birdmodify/birdtest-webapp'

jobs:   
  robot-testing:
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      #needs: [build-container]
      environment: testing
      #url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

      steps:
      - name: Checkout
        uses: actions/checkout@v2.4.0
        
      #- run: echo testing URL ${{ secrets.WEBAPP_URL }}       
      - run: ls -l ${{ github.workspace }}/robot_tests
      - run: mkdir reports
      - run: ls -l
      
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.0
        with:
           # Set always-auth in npmrc
           #always-auth: # optional, default is false
           # Version Spec of the version to use.  Examples: 12.x, 10.15.1, >=10.15.0
           node-version: 12.x
         
      
      - name: Setup Python
        uses: actions/setup-python@v2.3.1
        with:
          # Version range or exact version of a Python version to use, using SemVer's version range syntax.
          python-version: 3.7 # optional, default is 3.x
          # Used to specify a package manager for caching in the default directory. Supported values: pip, pipenv.
          #cache: # optional
          # The target architecture (x86, x64) of the Python interpreter.
          #architecture: # optional
          # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
          #token: # optional, default is ${{ github.token }}
          # Used to specify the path to dependency files. Supports wildcards or a list of file names for caching multiple dependencies.
          #cache-dependency-path: # optional
          
      - run: pip install robotframework robotframework-seleniumlibrary && npm install chromedriver
      
      - run: robot --variable URL:${{ secrets.WEBAPP_URL }}  -d ./reports -x outputxunit.xml ./robot_tests/Test.robot
      
      - run: ls -l
      - run: ls -l ./reports
                  
      - name: Upload test results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: reports
          path: ${{ github.workspace }}/reports
      
          #report_path: reports
      
      
      - name: Robot Reporter
        # You may pin to the exact commit or the version.
        # uses: joonvena/robotframework-reporter-action@d98aa3cf6d09f7c4dc28ea16ea49d6e07c09dbbe
        uses: joonvena/robotframework-reporter-action@v1.1
        with:
          # Token to access the API
          gh_access_token: ${{ secrets.GITHUB_TOKEN }}
          # Path to report
          #report_path: reports
          # SHA of the commit tha triggered the tests
          #sha: # default is ${{ github.sha }}
